{"ast":null,"code":"var _jsxFileName = \"/Users/tpl622_4/codeTechtonica2023/techtonica-assignments/week5-game-project/src/components/Dice.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Dice(props) {\n  // 1 file per function\n  //before retun statement inside dice component, think of thsi like a class \n  function changeImage() {\n    var randomNumber1 = Math.floor(Math.random() * 6 + 1);\n    var randomDiceImgSrc = \"images/dice\" + randomNumber1 + \".png\";\n    var image1 = document.getElementById(\"img1\");\n    image1.setAttribute(\"src\", randomDiceImgSrc);\n    var randomNumber2 = Math.floor(Math.random() * 6 + 1);\n    var randomDiceImgSrc2 = \"images/dice\" + randomNumber2 + \".png\";\n    // let image2 = document.querySelectorAll(\"img\")[1]\n    var image2 = document.getElementById(\"img2\");\n    image2.setAttribute(\"src\", randomDiceImgSrc2);\n    var title = document.querySelector(\"h1\");\n    if (randomNumber1 > randomNumber2) {\n      title.innerHTML = \"Player 1 wins!üèÜ\";\n    } else if (randomNumber2 > randomNumber1) {\n      title.innerHTML = \"Player 2 wins!üèÜ\";\n    } else {\n      title.innerHTML = \"It's a tie!ü§ùüèΩ\";\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dice\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"player\",\n        children: [\" \", props.player]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"diceRollButton\",\n        onClick: changeImage,\n        children: \" Roll the dice \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/dice1.png\",\n        alt: \"dice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), \"   \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Dice;\nvar _c;\n$RefreshReg$(_c, \"Dice\");","map":{"version":3,"names":["Dice","props","changeImage","randomNumber1","Math","floor","random","randomDiceImgSrc","image1","document","getElementById","setAttribute","randomNumber2","randomDiceImgSrc2","image2","title","querySelector","innerHTML","player"],"sources":["/Users/tpl622_4/codeTechtonica2023/techtonica-assignments/week5-game-project/src/components/Dice.js"],"sourcesContent":["export default function Dice(props) {\n    // 1 file per function\n    //before retun statement inside dice component, think of thsi like a class \n    function changeImage(){\n        let randomNumber1 = Math.floor(Math.random()*6 +1);\n        let randomDiceImgSrc = \"images/dice\" + randomNumber1 + \".png\";\n        let image1= document.getElementById(\"img1\");\n        image1.setAttribute(\"src\", randomDiceImgSrc);\n        \n        let randomNumber2 = Math.floor(Math.random()*6 +1);\n        let randomDiceImgSrc2 = \"images/dice\" +randomNumber2 + \".png\"; \n        // let image2 = document.querySelectorAll(\"img\")[1]\n        let image2 = document.getElementById(\"img2\");\n    \n        image2.setAttribute(\"src\", randomDiceImgSrc2); \n    \n    \n        const title = document.querySelector(\"h1\");\n            if (randomNumber1>randomNumber2){\n                title.innerHTML = \"Player 1 wins!üèÜ\";\n            }else if (randomNumber2>randomNumber1) {\n                title.innerHTML = \"Player 2 wins!üèÜ\";\n            } else{\n                title.innerHTML= \"It's a tie!ü§ùüèΩ\"\n        \n            }\n    }\n\n\n\n    return (\n      <>\n      <div className=\"dice\">\n        <p id=\"player\"> {props.player}</p>\n        <button className=\"diceRollButton\" onClick ={changeImage}> Roll the dice </button>\n        <img src=\"/images/dice1.png\" alt=\"dice\" />   {/* we dont need () or have the function as a string*/}\n        {/* anytime ref variable or func we will need {} in jsx return*/}\n      </div>\n  {/* \n  \n      <div class=\"buttons\"> \n          <button id= \"diceRollButton\" type=\"button\" onclick=changeImage() >Roll the Dice</button>\n          <button id=\"resetButtton\" type=\"button\" onclick =  resetImage()>Reset</button>\n  \n      </div> */}\n\n\n\n      </>\n    );\n  }\n  "],"mappings":";;;AAAA,eAAe,SAASA,IAAI,CAACC,KAAK,EAAE;EAChC;EACA;EACA,SAASC,WAAW,GAAE;IAClB,IAAIC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAC,CAAC,GAAE,CAAC,CAAC;IAClD,IAAIC,gBAAgB,GAAG,aAAa,GAAGJ,aAAa,GAAG,MAAM;IAC7D,IAAIK,MAAM,GAAEC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;IAC3CF,MAAM,CAACG,YAAY,CAAC,KAAK,EAAEJ,gBAAgB,CAAC;IAE5C,IAAIK,aAAa,GAAGR,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,EAAE,GAAC,CAAC,GAAE,CAAC,CAAC;IAClD,IAAIO,iBAAiB,GAAG,aAAa,GAAED,aAAa,GAAG,MAAM;IAC7D;IACA,IAAIE,MAAM,GAAGL,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;IAE5CI,MAAM,CAACH,YAAY,CAAC,KAAK,EAAEE,iBAAiB,CAAC;IAG7C,IAAME,KAAK,GAAGN,QAAQ,CAACO,aAAa,CAAC,IAAI,CAAC;IACtC,IAAIb,aAAa,GAACS,aAAa,EAAC;MAC5BG,KAAK,CAACE,SAAS,GAAG,kBAAkB;IACxC,CAAC,MAAK,IAAIL,aAAa,GAACT,aAAa,EAAE;MACnCY,KAAK,CAACE,SAAS,GAAG,kBAAkB;IACxC,CAAC,MAAK;MACFF,KAAK,CAACE,SAAS,GAAE,iBAAiB;IAEtC;EACR;EAIA,oBACE;IAAA,uBACA;MAAK,SAAS,EAAC,MAAM;MAAA,wBACnB;QAAG,EAAE,EAAC,QAAQ;QAAA,WAAC,GAAC,EAAChB,KAAK,CAACiB,MAAM;MAAA;QAAA;QAAA;QAAA;MAAA,QAAK,eAClC;QAAQ,SAAS,EAAC,gBAAgB;QAAC,OAAO,EAAGhB,WAAY;QAAA,UAAC;MAAe;QAAA;QAAA;QAAA;MAAA,QAAS,eAClF;QAAK,GAAG,EAAC,mBAAmB;QAAC,GAAG,EAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,OAAG;IAAA;MAAA;MAAA;MAAA;IAAA;EAEzC,iBAWH;AAEP;AAAC,KAlDqBF,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}