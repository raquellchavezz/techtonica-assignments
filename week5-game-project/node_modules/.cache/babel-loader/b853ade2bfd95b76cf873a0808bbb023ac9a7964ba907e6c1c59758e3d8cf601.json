{"ast":null,"code":"import _slicedToArray from \"/Users/tpl622_4/codeTechtonica2023/techtonica-assignments/week5-game-project/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nvar _jsxFileName = \"/Users/tpl622_4/codeTechtonica2023/techtonica-assignments/week5-game-project/src/App.js\",\n  _s = $RefreshSig$();\n// You are going to write a React component named `\n// Hi`, pass two properties into this component `firstName`\n// and `lastName`. When you run your program your HTML\n//  should say `\"Hi yourFirstName yourLastName\"`\nimport React from \"react\";\nimport \"./styles.css\";\nimport Dice from \"./components/Dice.js\"; //in dice.js making the component but wont be used until imported and initialized\nimport { useState } from 'react'; // use for 2 diff variables that in charge of hcih files images pointing to/ \nimport Title from \"./components/Title.js\";\n//method1: \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n  //component\n  var player1 = \"Player 1 \";\n  var player2 = \"Player 2 \";\n  var image = \"../images/dice1.png\";\n  var _useState = useState(function () {\n      //trying to set inital state to face\n      var randomDiceImgSrc = \"../images/dice1.png\";\n      return randomDiceImgSrc;\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    dieRoll1 = _useState2[0],\n    setDieRoll1 = _useState2[1]; //holds current image based on whatevere they rolled\n  var _useState3 = useState(function () {\n      //trying to set inital state to face1\n      var randomDiceImgSrc = \"../images/dice1.png\";\n      return randomDiceImgSrc;\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    dieRoll2 = _useState4[0],\n    setDieRoll2 = _useState4[1];\n  //inital die roll, starting values \n  //setImage1 to change the state or the value of image1\n  //instead image1 = you do setImage1(the value)\n  //useState tells it this will be a stateVariable and value passed is default\n  var _useState5 = useState(\"Dice Roll Game\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    newTitle = _useState6[0],\n    setNewTitle = _useState6[1]; //state for changing the title\n  var _useState7 = useState(0),\n    _useState8 = _slicedToArray(_useState7, 2),\n    userScore1 = _useState8[0],\n    setUserScore1 = _useState8[1];\n  var _useState9 = useState(0),\n    _useState10 = _slicedToArray(_useState9, 2),\n    userScore2 = _useState10[0],\n    setUserScore2 = _useState10[1];\n\n  //functions\n  var changeImage = function changeImage() {\n    //when button clicked this func will be triggered\n    // console.log((\"hello\"))\n    var randomNumber1 = Math.floor(Math.random() * 6 + 1);\n    var randomDiceImgSrc = \"../images/dice\" + randomNumber1 + \".png\";\n    console.log(randomDiceImgSrc);\n\n    // // let image1= document.getElementById(\"img1\");\n    // // image1.setAttribute(\"src\", randomDiceImgSrc);\n    setDieRoll1(randomDiceImgSrc); //img1 will get set to this random img\n\n    //doing the same for image 2\n    var randomNumber2 = Math.floor(Math.random() * 6 + 1);\n    var randomDiceImgSrc2 = \"../images/dice\" + randomNumber2 + \".png\";\n    setDieRoll2(randomDiceImgSrc2);\n    // let image2 = document.querySelectorAll(\"img\")[1]\n    // let image2 = document.getElementById(\"img2\");\n    // image2.setAttribute(\"src\", randomDiceImgSrc2); \n\n    // let randomNumber1 = Math.floor(Math.random()*6 +1);\n    // let randomDiceImgSrc = \"../images/dice\" + randomNumber1 + \".png\";\n    // let randomNumber2 = Math.floor(Math.random()*6 +1);\n    // let randomDiceImgSrc2 = \"../images/dice\" + randomNumber2 + \".png\";\n    if (randomNumber1 > randomNumber2) {\n      setNewTitle(\"Player 1 wins!üèÜ\");\n    } else if (randomNumber2 > randomNumber1) {\n      setNewTitle(\"Player 2 wins!üèÜ\");\n    } else {\n      setNewTitle(\"It's a tie!ü§ùüèΩ\");\n    }\n  };\n  return (\n    /*#__PURE__*/\n    //children\n    _jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(\"center\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App\",\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: newTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 12\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Dice, {\n          player: player1,\n          face: dieRoll1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(Dice, {\n          player: player2,\n          face: dieRoll2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"diceRollButton\",\n          onClick: function onClick() {\n            changeImage();\n          },\n          children: \" Roll the dice \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Score Board: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this)\n    }, void 0, false)\n  );\n}\n\n//canput both imgs in dice component- may be confusing want to keep components simple\n//could seperate so the button is just in app.js so controlled thru there & have new component thats just these images \n//dice component that just shows img- tell what img to show and shows it \n// app will have button + func to roll \n// we imported the component\n// we are doing this step so its imported into your diff files so it can\n// hi.js is where we are making reusable code\n//app.js is where you are calling that code to be used\n\n//method 2: \n//code out all of the code for dice 1 and dice 2, wont be instances of each the dice component \n\n// export default function App(){ \n//     const player = \"Player 1\"; \n//     const  image= \"../images/dice1.png\"; \n//     return(\n//         <div className = \"dice\">\n//             <center> \n//                 <h1>DICE ROLL GAME</h1>\n//                 <div className=\"container\">\n\n//                 </div>\n\n//         </center>\n\n//         </div>\n//          ); \n//     } \n\n//make new usestate line that has count set count and that would be counting the num that user is clicking the roll the dice button \n// could be displayed on the screen and then reset to 0 when screen is refresehd --> intial state 0\n_s(App, \"kzbbKvcPNwWIWyc900sIog3N9OU=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Dice","useState","Title","App","player1","player2","image","randomDiceImgSrc","dieRoll1","setDieRoll1","dieRoll2","setDieRoll2","newTitle","setNewTitle","userScore1","setUserScore1","userScore2","setUserScore2","changeImage","randomNumber1","Math","floor","random","console","log","randomNumber2","randomDiceImgSrc2"],"sources":["/Users/tpl622_4/codeTechtonica2023/techtonica-assignments/week5-game-project/src/App.js"],"sourcesContent":["// You are going to write a React component named `\n// Hi`, pass two properties into this component `firstName`\n// and `lastName`. When you run your program your HTML\n//  should say `\"Hi yourFirstName yourLastName\"`\nimport React from \"react\";\nimport \"./styles.css\";\nimport Dice from \"./components/Dice.js\"; //in dice.js making the component but wont be used until imported and initialized\nimport { useState } from 'react'; // use for 2 diff variables that in charge of hcih files images pointing to/ \nimport Title from \"./components/Title.js\";\n//method1: \nexport default function App() { //component\n  const player1 = \"Player 1 \";\n  const player2 = \"Player 2 \";\n  const image = \"../images/dice1.png\";\n  const [dieRoll1,setDieRoll1] = useState(()=> { //trying to set inital state to face\n    let randomDiceImgSrc = \"../images/dice1.png\";\n    return randomDiceImgSrc\n  }); //holds current image based on whatevere they rolled\n  const [dieRoll2,setDieRoll2] =useState(()=> { //trying to set inital state to face1\n    let randomDiceImgSrc = \"../images/dice1.png\";\n    return randomDiceImgSrc ;\n   }); \n   //inital die roll, starting values \n  //setImage1 to change the state or the value of image1\n  //instead image1 = you do setImage1(the value)\n  //useState tells it this will be a stateVariable and value passed is default\n  const [newTitle, setNewTitle] = useState(\"Dice Roll Game\") //state for changing the title\n  const [userScore1, setUserScore1] = useState(0);\n  const [userScore2, setUserScore2] = useState(0);\n\n\n\n  //functions\n  const changeImage = () => { //when button clicked this func will be triggered\n    // console.log((\"hello\"))\n    let randomNumber1 = Math.floor(Math.random()*6 +1);\n    let randomDiceImgSrc = \"../images/dice\" + randomNumber1 + \".png\";\n    console.log(randomDiceImgSrc)\n\n    // // let image1= document.getElementById(\"img1\");\n    // // image1.setAttribute(\"src\", randomDiceImgSrc);\n    setDieRoll1(randomDiceImgSrc) //img1 will get set to this random img\n    \n    //doing the same for image 2\n    let randomNumber2 = Math.floor(Math.random()*6 +1);\n    let randomDiceImgSrc2 = \"../images/dice\" +randomNumber2 + \".png\"; \n    setDieRoll2(randomDiceImgSrc2) \n    // let image2 = document.querySelectorAll(\"img\")[1]\n    // let image2 = document.getElementById(\"img2\");\n    // image2.setAttribute(\"src\", randomDiceImgSrc2); \n\n        \n      // let randomNumber1 = Math.floor(Math.random()*6 +1);\n      // let randomDiceImgSrc = \"../images/dice\" + randomNumber1 + \".png\";\n      // let randomNumber2 = Math.floor(Math.random()*6 +1);\n      // let randomDiceImgSrc2 = \"../images/dice\" + randomNumber2 + \".png\";\n        if (randomNumber1>randomNumber2){\n           setNewTitle(\"Player 1 wins!üèÜ\");\n        }else if (randomNumber2>randomNumber1) {\n            setNewTitle(\"Player 2 wins!üèÜ\");\n        } else{\n           setNewTitle(\"It's a tie!ü§ùüèΩ\");\n        \n        }\n    \n  }\n\n \n\n\n\n\n  return ( //children\n    <>\n    <div className=\"App\">\n        <center>\n          <div className=\"App\">\n           <h1>{newTitle}</h1> \n          </div>\n        </center>\n      <Dice player={player1} face={dieRoll1} />  {/* initializing- putting the component on the page*/}\n      <Dice player={player2} face={dieRoll2} /> \n      {/* using state variables now ^ anytime image */}\n      <button className=\"diceRollButton\" onClick= {()=> {\n        changeImage(); \n\n      }}> Roll the dice </button>\n\n      <div>Score Board: </div>\n{/* onClick ={changeImage} */}\n\n\n    </div>\n    \n    </>\n    \n  );\n}\n\n\n//canput both imgs in dice component- may be confusing want to keep components simple\n//could seperate so the button is just in app.js so controlled thru there & have new component thats just these images \n//dice component that just shows img- tell what img to show and shows it \n// app will have button + func to roll \n// we imported the component\n// we are doing this step so its imported into your diff files so it can\n// hi.js is where we are making reusable code\n//app.js is where you are calling that code to be used\n\n\n//method 2: \n//code out all of the code for dice 1 and dice 2, wont be instances of each the dice component \n\n// export default function App(){ \n//     const player = \"Player 1\"; \n//     const  image= \"../images/dice1.png\"; \n//     return(\n//         <div className = \"dice\">\n//             <center> \n//                 <h1>DICE ROLL GAME</h1>\n//                 <div className=\"container\">\n                \n//                 </div>\n\n//         </center>\n\n//         </div>\n//          ); \n//     } \n\n//make new usestate line that has count set count and that would be counting the num that user is clicking the roll the dice button \n// could be displayed on the screen and then reset to 0 when screen is refresehd --> intial state 0"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}